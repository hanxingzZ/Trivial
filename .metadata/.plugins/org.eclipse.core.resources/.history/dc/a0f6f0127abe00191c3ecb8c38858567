package leetCode;

import java.util.ArrayList;
import java.util.List;
import java.util.Stack;

public class ValidParentheses {
	public boolean isValid(String s) {
		if (s == null) {
			return true;
		}
		char[] cArr = s.toCharArray();
		Stack<Character> stack = new Stack<>();
		for (int i = 0; i < cArr.length; i++) {
			if (isLeft(cArr[i])) {
				stack.push(cArr[i]);
			} else if (isRight(cArr[i])) {
				if(!isMatch(stack.pop(),cArr[i]))){
					return false;
				}
			}
		}
		return stack.empty();
	}

	private boolean isLeft(char c) {
		return c == '(' || c == '{' || c == '[';
	}

	private boolean isRight(char c) {
		return c == ')' || c == '}' || c == '}';
	}

	private boolean isMatch(char c1, char c2) {
		return (c1 == '(' && c2 == ')') || (c1 == '{' && c2 == '}') || (c1 == '[' && c2 == ']');
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
